doctype html
html(dir="ltr", lang="en")
    head
        meta(charset="utf-8")
        meta(name="viewport" content="width=device-width, initial-scale=1")
        link(rel="stylesheet", href="/static/css/struct.css")
        title The Slab markup language
    body.u-container-vertical
        header
            .u-container
                .u-bar
                    .u-bar__left
                        style.
                          .a-logo { color: black; text-decoration: none; }
                        a.a-logo(href="/")
                            div
                                span.logo Slab
                    .u-bar__right
                        -- empty

        main
            .u-container.u-flow-c-4
                .switcher
                    .flow
                        p Slab is a programmable markup language to generate HTML.

                    .c-content.flow
                        p This site is not ready for prime time yet. You can check out <a href="https://github.com/hypered/slab">the project on GitHub</a> instead.

                .c-content.flow-all.u-flow-c-4.limit-42em
                    h2 Introduction

                    p Slab is an alternative syntax for writing HTML, plus some programming language features (often found in templating languages, like conditionals and loops). <code>slab</code> is a command-line tool to process <code>.slab</code> files and render them into HTML.

                    p Slab revolves around the concept of fragments. Fragments are pieces of HTML that work like functions. You can define a fragment and then call it:

                    pre
                        code
                            include:escape-html ../examples/docs/frag.slab

                    p The example above defines a fragment named <code>page</code>. It then calls <code>page</code>, passing a block of HTML (containing a heading and a paragraph) as an argument (implicitly called <code>content</code>).

                    p The <code>slab render --pretty</code> command can be used to transform the above code into the following HTML:

                    pre
                        code
                            include:escape-html ../examples/docs/frag.html

                    p When not pretty-printed, it looks like this instead:

                    pre
                        code
                            :escape-html
                                <!DOCTYPE HTML>
                                <body><h1>A title</h1><p>A paragraph.</p></body>
